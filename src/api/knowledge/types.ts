/* eslint-disable */
// tslint:disable
/**
 * Yeying API
 * 
 *
 * OpenAPI spec version: 1.0
 * Contact: yeying.community@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator+.
 * https://github.com/karlvr/openapi-generator-plus
 * Do not edit the class manually.
 */

import { Express } from 'express'
import { Api } from '../../models'

export interface KnowledgeApi {
	knowledgeAdd: (request: Api.RagAddKnowledgeRequest) => Promise<KnowledgeAddResponse>
	knowledgeAppend: (request: Api.ContentAppendRequest) => Promise<KnowledgeAppendResponse>
	knowledgeCreate: (request: Api.RagCreateKnowledgeRequest) => Promise<KnowledgeCreateResponse>
	knowledgeDelete: (request: Api.RagDeleteKnowledgeRequest) => Promise<KnowledgeDeleteResponse>
	knowledgeSearch: (request: Api.ApicontentSearchRequest) => Promise<KnowledgeSearchResponse>
}

export type KnowledgeAddResponse = KnowledgeAdd200Response | KnowledgeAddDefaultResponse

export interface KnowledgeAdd200Response {
	status: 200
	body: Api.RagAddKnowledgeResponse
	headers?: never
}

export interface KnowledgeAddDefaultResponse {
	/* Catch-all response */
	status: 'default'
	actualStatus: number
	body: Api.RpcStatus
	headers?: never
}

export type KnowledgeAppendResponse = KnowledgeAppend200Response | KnowledgeAppendDefaultResponse

export interface KnowledgeAppend200Response {
	status: 200
	body: Api.ContentAppendResponse
	headers?: never
}

export interface KnowledgeAppendDefaultResponse {
	/* Catch-all response */
	status: 'default'
	actualStatus: number
	body: Api.RpcStatus
	headers?: never
}

export type KnowledgeCreateResponse = KnowledgeCreate200Response | KnowledgeCreateDefaultResponse

export interface KnowledgeCreate200Response {
	status: 200
	body: Api.RagCreateKnowledgeResponse
	headers?: never
}

export interface KnowledgeCreateDefaultResponse {
	/* Catch-all response */
	status: 'default'
	actualStatus: number
	body: Api.RpcStatus
	headers?: never
}

export type KnowledgeDeleteResponse = KnowledgeDelete200Response | KnowledgeDeleteDefaultResponse

export interface KnowledgeDelete200Response {
	status: 200
	body: Api.RagDeleteKnowledgeResponse
	headers?: never
}

export interface KnowledgeDeleteDefaultResponse {
	/* Catch-all response */
	status: 'default'
	actualStatus: number
	body: Api.RpcStatus
	headers?: never
}

export type KnowledgeSearchResponse = KnowledgeSearch200Response | KnowledgeSearchDefaultResponse

export interface KnowledgeSearch200Response {
	status: 200
	body: Api.ApicontentSearchResponse
	headers?: never
}

export interface KnowledgeSearchDefaultResponse {
	/* Catch-all response */
	status: 'default'
	actualStatus: number
	body: Api.RpcStatus
	headers?: never
}

