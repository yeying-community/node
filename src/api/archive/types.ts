/* eslint-disable */
// tslint:disable
/**
 * Yeying API
 * 
 *
 * OpenAPI spec version: 1.0
 * Contact: yeying.community@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator+.
 * https://github.com/karlvr/openapi-generator-plus
 * Do not edit the class manually.
 */

import { Express } from 'express'
import { Api } from '../../models'

export interface ArchiveApi {
	archiveAdd: (request: Api.CorrectionArchiveAddRequest) => Promise<ArchiveAddResponse>
	archiveDelete: (request: Api.CorrectionArchiveDeleteRequest) => Promise<ArchiveDeleteResponse>
	archiveDetail: (request: Api.CorrectionArchiveDetailRequest) => Promise<ArchiveDetailResponse>
	archiveDetailByStudentDid: (request: Api.CorrectionArchiveDetailStudentRequest) => Promise<ArchiveDetailByStudentDidResponse>
	archiveList: (request: Api.CorrectionArchiveListRequest) => Promise<ArchiveListResponse>
	archiveUpdate: (request: Api.CorrectionArchiveUpdateRequest) => Promise<ArchiveUpdateResponse>
}

export type ArchiveAddResponse = ArchiveAdd200Response | ArchiveAddDefaultResponse

export interface ArchiveAdd200Response {
	status: 200
	body: Api.CorrectionArchiveAddResponse
	headers?: never
}

export interface ArchiveAddDefaultResponse {
	/* Catch-all response */
	status: 'default'
	actualStatus: number
	body: Api.RpcStatus
	headers?: never
}

export type ArchiveDeleteResponse = ArchiveDelete200Response | ArchiveDeleteDefaultResponse

export interface ArchiveDelete200Response {
	status: 200
	body: Api.CorrectionArchiveDeleteResponse
	headers?: never
}

export interface ArchiveDeleteDefaultResponse {
	/* Catch-all response */
	status: 'default'
	actualStatus: number
	body: Api.RpcStatus
	headers?: never
}

export type ArchiveDetailResponse = ArchiveDetail200Response | ArchiveDetailDefaultResponse

export interface ArchiveDetail200Response {
	status: 200
	body: Api.CorrectionArchiveDetailResponse
	headers?: never
}

export interface ArchiveDetailDefaultResponse {
	/* Catch-all response */
	status: 'default'
	actualStatus: number
	body: Api.RpcStatus
	headers?: never
}

export type ArchiveDetailByStudentDidResponse = ArchiveDetailByStudentDid200Response | ArchiveDetailByStudentDidDefaultResponse

export interface ArchiveDetailByStudentDid200Response {
	status: 200
	body: Api.CorrectionArchiveDetailStudentResponse
	headers?: never
}

export interface ArchiveDetailByStudentDidDefaultResponse {
	/* Catch-all response */
	status: 'default'
	actualStatus: number
	body: Api.RpcStatus
	headers?: never
}

export type ArchiveListResponse = ArchiveList200Response | ArchiveListDefaultResponse

export interface ArchiveList200Response {
	status: 200
	body: Api.CorrectionArchiveListResponse
	headers?: never
}

export interface ArchiveListDefaultResponse {
	/* Catch-all response */
	status: 'default'
	actualStatus: number
	body: Api.RpcStatus
	headers?: never
}

export type ArchiveUpdateResponse = ArchiveUpdate200Response | ArchiveUpdateDefaultResponse

export interface ArchiveUpdate200Response {
	status: 200
	body: Api.CorrectionArchiveUpdateResponse
	headers?: never
}

export interface ArchiveUpdateDefaultResponse {
	/* Catch-all response */
	status: 'default'
	actualStatus: number
	body: Api.RpcStatus
	headers?: never
}

