/* eslint-disable */
// tslint:disable
/**
 * Yeying API
 * 
 *
 * OpenAPI spec version: 1.0
 * Contact: yeying.community@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator+.
 * https://github.com/karlvr/openapi-generator-plus
 * Do not edit the class manually.
 */

import { Express } from 'express'
import { Api } from '../../models'

export interface ProviderApi {
	providerAdd: (request: Api.LlmAddProviderRequest) => Promise<ProviderAddResponse>
	providerDelete: (request: Api.LlmDeleteProviderRequest) => Promise<ProviderDeleteResponse>
	providerDescriptions: (request: Api.LlmProviderDescriptionsRequest) => Promise<ProviderDescriptionsResponse>
	providerDetail: (request: Api.LlmProviderDetailRequest) => Promise<ProviderDetailResponse>
	providerModels: (request: Api.LlmProviderModelsRequest) => Promise<ProviderModelsResponse>
	providerSearch: (request: Api.LlmSearchProviderRequest) => Promise<ProviderSearchResponse>
}

export type ProviderAddResponse = ProviderAdd200Response | ProviderAddDefaultResponse

export interface ProviderAdd200Response {
	status: 200
	body: Api.LlmAddProviderResponse
	headers?: never
}

export interface ProviderAddDefaultResponse {
	/* Catch-all response */
	status: 'default'
	actualStatus: number
	body: Api.RpcStatus
	headers?: never
}

export type ProviderDeleteResponse = ProviderDelete200Response | ProviderDeleteDefaultResponse

export interface ProviderDelete200Response {
	status: 200
	body: Api.LlmDeleteProviderResponse
	headers?: never
}

export interface ProviderDeleteDefaultResponse {
	/* Catch-all response */
	status: 'default'
	actualStatus: number
	body: Api.RpcStatus
	headers?: never
}

export type ProviderDescriptionsResponse = ProviderDescriptions200Response | ProviderDescriptionsDefaultResponse

export interface ProviderDescriptions200Response {
	status: 200
	body: Api.LlmProviderDescriptionsResponse
	headers?: never
}

export interface ProviderDescriptionsDefaultResponse {
	/* Catch-all response */
	status: 'default'
	actualStatus: number
	body: Api.RpcStatus
	headers?: never
}

export type ProviderDetailResponse = ProviderDetail200Response | ProviderDetailDefaultResponse

export interface ProviderDetail200Response {
	status: 200
	body: Api.LlmProviderDetailResponse
	headers?: never
}

export interface ProviderDetailDefaultResponse {
	/* Catch-all response */
	status: 'default'
	actualStatus: number
	body: Api.RpcStatus
	headers?: never
}

export type ProviderModelsResponse = ProviderModels200Response | ProviderModelsDefaultResponse

export interface ProviderModels200Response {
	status: 200
	body: Api.LlmProviderModelsResponse
	headers?: never
}

export interface ProviderModelsDefaultResponse {
	/* Catch-all response */
	status: 'default'
	actualStatus: number
	body: Api.RpcStatus
	headers?: never
}

export type ProviderSearchResponse = ProviderSearch200Response | ProviderSearchDefaultResponse

export interface ProviderSearch200Response {
	status: 200
	body: Api.LlmSearchProviderResponse
	headers?: never
}

export interface ProviderSearchDefaultResponse {
	/* Catch-all response */
	status: 'default'
	actualStatus: number
	body: Api.RpcStatus
	headers?: never
}

