/* eslint-disable */
// tslint:disable
/**
 * Yeying API
 * 
 *
 * OpenAPI spec version: 1.0
 * Contact: yeying.community@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator+.
 * https://github.com/karlvr/openapi-generator-plus
 * Do not edit the class manually.
 */

import { Express } from 'express'
import { Api } from '../../models'

export interface SpiderApi {
	spiderConfig: (request: Api.PluginInstallRequest) => Promise<SpiderConfigResponse>
	spiderInstall: (request: Api.PluginInstallRequest) => Promise<SpiderInstallResponse>
	spiderRemove: (request: Api.PluginUninstallRequest) => Promise<SpiderRemoveResponse>
	spiderSearch: (request: Api.ApipluginSearchRequest) => Promise<SpiderSearchResponse>
	spiderUpgrade: (request: Api.PluginInstallRequest) => Promise<SpiderUpgradeResponse>
}

export type SpiderConfigResponse = SpiderConfig200Response | SpiderConfigDefaultResponse

export interface SpiderConfig200Response {
	status: 200
	body: Api.PluginInstallResponse
	headers?: never
}

export interface SpiderConfigDefaultResponse {
	/* Catch-all response */
	status: 'default'
	actualStatus: number
	body: Api.RpcStatus
	headers?: never
}

export type SpiderInstallResponse = SpiderInstall200Response | SpiderInstallDefaultResponse

export interface SpiderInstall200Response {
	status: 200
	body: Api.PluginInstallResponse
	headers?: never
}

export interface SpiderInstallDefaultResponse {
	/* Catch-all response */
	status: 'default'
	actualStatus: number
	body: Api.RpcStatus
	headers?: never
}

export type SpiderRemoveResponse = SpiderRemove200Response | SpiderRemoveDefaultResponse

export interface SpiderRemove200Response {
	status: 200
	body: Api.PluginUninstallResponse
	headers?: never
}

export interface SpiderRemoveDefaultResponse {
	/* Catch-all response */
	status: 'default'
	actualStatus: number
	body: Api.RpcStatus
	headers?: never
}

export type SpiderSearchResponse = SpiderSearch200Response | SpiderSearchDefaultResponse

export interface SpiderSearch200Response {
	status: 200
	body: Api.ApipluginSearchResponse
	headers?: never
}

export interface SpiderSearchDefaultResponse {
	/* Catch-all response */
	status: 'default'
	actualStatus: number
	body: Api.RpcStatus
	headers?: never
}

export type SpiderUpgradeResponse = SpiderUpgrade200Response | SpiderUpgradeDefaultResponse

export interface SpiderUpgrade200Response {
	status: 200
	body: Api.PluginInstallResponse
	headers?: never
}

export interface SpiderUpgradeDefaultResponse {
	/* Catch-all response */
	status: 'default'
	actualStatus: number
	body: Api.RpcStatus
	headers?: never
}

