/* eslint-disable */
// tslint:disable
/**
 * Yeying API
 * 
 *
 * OpenAPI spec version: 1.0
 * Contact: yeying.community@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator+.
 * https://github.com/karlvr/openapi-generator-plus
 * Do not edit the class manually.
 */

import { Express, Request, Response } from 'express'
import passport from 'passport'
import multer from 'multer'
import * as t from './types'
import * as v from '../../validation'
import { Api } from '../../models'

export default function(app: Express, impl: t.SocialApi) {
	app.post(
		'/api/v1/social/getFriends',
		function (req: Request, res: Response) {
			try {
				function __body() {
					const __contentType = req.get('Content-Type')
					const __mimeType = __contentType ? __contentType.replace(/;.*/, '') : undefined

					if (__mimeType === 'application/json') {
						return v.modelApiSocialGetFriendsRequestFromRequest('body', req.body)
					}
					console.error(`Invalid request content type: ${__contentType}`)
					throw new Error(`Invalid request content type: ${__contentType}`)
				}

				impl.socialGetFriends(__body()).then(function (response) {
					if (response.status === 200) {
						let body: any
						try {
							body = v.modelApiSocialGetFriendResponseToResponse('response', response.body)
						} catch (error) {
							console.error('Invalid response body in social.socialGetFriends', error)
							res.status(500)
							res.send()
							return
						}

						res.status(200)
						res.type('application/json')
						res.send(body)
						return
					}

					/* Catch-all response */
					let body: any
					try {
						body = v.modelApiRpcStatusToResponse('response', response.body)
					} catch (error) {
						console.error('Invalid response body in social.socialGetFriends', error)
						res.status(500)
						res.send()
						return
					}

					res.status(response.actualStatus)
					res.send(body)
				}).catch(function (error) {
					console.error('Unexpected error in social.socialGetFriends', error.stack || error)
					res.status(500)
					res.send()
				})
			} catch (error) {
				/* Catch validation errors */
				res.status(400)
				res.type('text/plain; charset=utf-8')
				res.send(error)
			}
		}
	)

	app.post(
		'/api/v1/social/makeFriends',
		function (req: Request, res: Response) {
			try {
				function __body() {
					const __contentType = req.get('Content-Type')
					const __mimeType = __contentType ? __contentType.replace(/;.*/, '') : undefined

					if (__mimeType === 'application/json') {
						return v.modelApiSocialMakeFriendsRequestFromRequest('body', req.body)
					}
					console.error(`Invalid request content type: ${__contentType}`)
					throw new Error(`Invalid request content type: ${__contentType}`)
				}

				impl.socialMakeFriends(__body()).then(function (response) {
					if (response.status === 200) {
						let body: any
						try {
							body = v.modelApiSocialMakeFriendsResponseToResponse('response', response.body)
						} catch (error) {
							console.error('Invalid response body in social.socialMakeFriends', error)
							res.status(500)
							res.send()
							return
						}

						res.status(200)
						res.type('application/json')
						res.send(body)
						return
					}

					/* Catch-all response */
					let body: any
					try {
						body = v.modelApiRpcStatusToResponse('response', response.body)
					} catch (error) {
						console.error('Invalid response body in social.socialMakeFriends', error)
						res.status(500)
						res.send()
						return
					}

					res.status(response.actualStatus)
					res.send(body)
				}).catch(function (error) {
					console.error('Unexpected error in social.socialMakeFriends', error.stack || error)
					res.status(500)
					res.send()
				})
			} catch (error) {
				/* Catch validation errors */
				res.status(400)
				res.type('text/plain; charset=utf-8')
				res.send(error)
			}
		}
	)

}
