/* eslint-disable */
// tslint:disable
/**
 * Yeying API
 * 
 *
 * OpenAPI spec version: 1.0
 * Contact: yeying.community@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator+.
 * https://github.com/karlvr/openapi-generator-plus
 * Do not edit the class manually.
 */

import { Express } from 'express'
import { Api } from '../../models'

export interface AuditApi {
	auditApprove: (request: Api.AuditAuditApproveRequest) => Promise<AuditApproveResponse>
	auditCancel: (request: Api.AuditAuditCancelRequest) => Promise<AuditCancelResponse>
	auditCreate: (request: Api.AuditAuditCreateRequest) => Promise<AuditCreateResponse>
	auditDetail: (request: Api.AuditAuditDetailRequest) => Promise<AuditDetailResponse>
	auditReject: (request: Api.AuditAuditRejectRequest) => Promise<AuditRejectResponse>
	auditSearch: (request: Api.AuditAuditSearchRequest) => Promise<AuditSearchResponse>
}

export type AuditApproveResponse = AuditApprove200Response | AuditApproveDefaultResponse

export interface AuditApprove200Response {
	status: 200
	body: Api.AuditAuditApproveResponse
	headers?: never
}

export interface AuditApproveDefaultResponse {
	/* Catch-all response */
	status: 'default'
	actualStatus: number
	body: Api.RpcStatus
	headers?: never
}

export type AuditCancelResponse = AuditCancel200Response | AuditCancelDefaultResponse

export interface AuditCancel200Response {
	status: 200
	body: Api.AuditAuditCancelResponse
	headers?: never
}

export interface AuditCancelDefaultResponse {
	/* Catch-all response */
	status: 'default'
	actualStatus: number
	body: Api.RpcStatus
	headers?: never
}

export type AuditCreateResponse = AuditCreate200Response | AuditCreateDefaultResponse

export interface AuditCreate200Response {
	status: 200
	body: Api.AuditAuditCreateResponse
	headers?: never
}

export interface AuditCreateDefaultResponse {
	/* Catch-all response */
	status: 'default'
	actualStatus: number
	body: Api.RpcStatus
	headers?: never
}

export type AuditDetailResponse = AuditDetail200Response | AuditDetailDefaultResponse

export interface AuditDetail200Response {
	status: 200
	body: Api.AuditAuditDetailResponse
	headers?: never
}

export interface AuditDetailDefaultResponse {
	/* Catch-all response */
	status: 'default'
	actualStatus: number
	body: Api.RpcStatus
	headers?: never
}

export type AuditRejectResponse = AuditReject200Response | AuditRejectDefaultResponse

export interface AuditReject200Response {
	status: 200
	body: Api.AuditAuditRejectResponse
	headers?: never
}

export interface AuditRejectDefaultResponse {
	/* Catch-all response */
	status: 'default'
	actualStatus: number
	body: Api.RpcStatus
	headers?: never
}

export type AuditSearchResponse = AuditSearch200Response | AuditSearchDefaultResponse

export interface AuditSearch200Response {
	status: 200
	body: Api.AuditAuditSearchResponse
	headers?: never
}

export interface AuditSearchDefaultResponse {
	/* Catch-all response */
	status: 'default'
	actualStatus: number
	body: Api.RpcStatus
	headers?: never
}

