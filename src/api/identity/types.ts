/* eslint-disable */
// tslint:disable
/**
 * Yeying API
 * 
 *
 * OpenAPI spec version: 1.0
 * Contact: yeying.community@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator+.
 * https://github.com/karlvr/openapi-generator-plus
 * Do not edit the class manually.
 */

import { Express } from 'express'
import { Api } from '../../models'

export interface IdentityApi {
	identityCancel: (request: Api.IdentityCancelRequest) => Promise<IdentityCancelResponse>
	identityDeposit: (request: Api.IdentityDepositRequest) => Promise<IdentityDepositResponse>
	identityQuery: (request: Api.IdentityQueryRequest) => Promise<IdentityQueryResponse>
	identityRetrieve: (request: Api.IdentityRetrieveRequest) => Promise<IdentityRetrieveResponse>
	identityShare: (request: Api.IdentityShareRequest) => Promise<IdentityShareResponse>
}

export type IdentityCancelResponse = IdentityCancel200Response | IdentityCancelDefaultResponse

export interface IdentityCancel200Response {
	status: 200
	body: Api.IdentityCancelResponse
	headers?: never
}

export interface IdentityCancelDefaultResponse {
	/* Catch-all response */
	status: 'default'
	actualStatus: number
	body: Api.RpcStatus
	headers?: never
}

export type IdentityDepositResponse = IdentityDeposit200Response | IdentityDepositDefaultResponse

export interface IdentityDeposit200Response {
	status: 200
	body: Api.IdentityDepositResponse
	headers?: never
}

export interface IdentityDepositDefaultResponse {
	/* Catch-all response */
	status: 'default'
	actualStatus: number
	body: Api.RpcStatus
	headers?: never
}

export type IdentityQueryResponse = IdentityQuery200Response | IdentityQueryDefaultResponse

export interface IdentityQuery200Response {
	status: 200
	body: Api.IdentityQueryResponse
	headers?: never
}

export interface IdentityQueryDefaultResponse {
	/* Catch-all response */
	status: 'default'
	actualStatus: number
	body: Api.RpcStatus
	headers?: never
}

export type IdentityRetrieveResponse = IdentityRetrieve200Response | IdentityRetrieveDefaultResponse

export interface IdentityRetrieve200Response {
	status: 200
	body: Api.IdentityRetrieveResponse
	headers?: never
}

export interface IdentityRetrieveDefaultResponse {
	/* Catch-all response */
	status: 'default'
	actualStatus: number
	body: Api.RpcStatus
	headers?: never
}

export type IdentityShareResponse = IdentityShare200Response | IdentityShareDefaultResponse

export interface IdentityShare200Response {
	status: 200
	body: Api.IdentityShareResponse
	headers?: never
}

export interface IdentityShareDefaultResponse {
	/* Catch-all response */
	status: 'default'
	actualStatus: number
	body: Api.RpcStatus
	headers?: never
}

