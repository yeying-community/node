/* eslint-disable */
// tslint:disable
/**
 * Yeying API
 * 
 *
 * OpenAPI spec version: 1.0
 * Contact: yeying.community@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator+.
 * https://github.com/karlvr/openapi-generator-plus
 * Do not edit the class manually.
 */

import { Express } from 'express'
import { Api } from '../../models'

export interface BlockApi {
	blockConfirm: (request: Api.AssetConfirmBlockRequest) => Promise<BlockConfirmResponse>
	blockGet: (request: Api.AssetGetBlockRequest) => Promise<BlockGetResponse>
	blockPut: (request: Api.AssetPutBlockRequest) => Promise<BlockPutResponse>
	blockStreamGet: (request: Api.AssetStreamGetBlockRequest) => Promise<BlockStreamGetResponse>
	blockStreamPut: (request: Api.AssetStreamPutBlockRequest) => Promise<BlockStreamPutResponse>
}

export type BlockConfirmResponse = BlockConfirm200Response | BlockConfirmDefaultResponse

export interface BlockConfirm200Response {
	status: 200
	body: Api.AssetConfirmBlockResponse
	headers?: never
}

export interface BlockConfirmDefaultResponse {
	/* Catch-all response */
	status: 'default'
	actualStatus: number
	body: Api.RpcStatus
	headers?: never
}

export type BlockGetResponse = BlockGet200Response | BlockGetDefaultResponse

export interface BlockGet200Response {
	status: 200
	body: Api.AssetGetBlockResponse
	headers?: never
}

export interface BlockGetDefaultResponse {
	/* Catch-all response */
	status: 'default'
	actualStatus: number
	body: Api.RpcStatus
	headers?: never
}

export type BlockPutResponse = BlockPut200Response | BlockPutDefaultResponse

export interface BlockPut200Response {
	status: 200
	body: Api.AssetPutBlockResponse
	headers?: never
}

export interface BlockPutDefaultResponse {
	/* Catch-all response */
	status: 'default'
	actualStatus: number
	body: Api.RpcStatus
	headers?: never
}

export type BlockStreamGetResponse = BlockStreamGet200Response | BlockStreamGetDefaultResponse

export interface BlockStreamGet200Response {
	status: 200
	body: Api.BlockStreamGet200Response
	headers?: never
}

export interface BlockStreamGetDefaultResponse {
	/* Catch-all response */
	status: 'default'
	actualStatus: number
	body: Api.RpcStatus
	headers?: never
}

export type BlockStreamPutResponse = BlockStreamPut200Response | BlockStreamPutDefaultResponse

export interface BlockStreamPut200Response {
	status: 200
	body: Api.BlockStreamPut200Response
	headers?: never
}

export interface BlockStreamPutDefaultResponse {
	/* Catch-all response */
	status: 'default'
	actualStatus: number
	body: Api.RpcStatus
	headers?: never
}

